{
  "version": 3,
  "sources": ["../../../../../node_modules/@climblee/uv-ui/libs/luch-request/utils.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/helpers/buildURL.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/helpers/isAbsoluteURL.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/helpers/combineURLs.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/buildFullPath.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/settle.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/adapters/index.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/dispatchRequest.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/InterceptorManager.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/mergeConfig.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/defaults.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/utils/clone.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/core/Request.js", "../../../../../node_modules/@climblee/uv-ui/libs/luch-request/index.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/index.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/test.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/digit.js", "../../../../../node_modules/@climblee/uv-ui/libs/util/route.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/debounce.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/throttle.js", "../../../../../node_modules/@climblee/uv-ui/libs/mixin/mixin.js", "../../../../../node_modules/@climblee/uv-ui/libs/mixin/mpMixin.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/colorGradient.js", "../../../../../node_modules/@climblee/uv-ui/libs/config/config.js", "../../../../../node_modules/@climblee/uv-ui/libs/function/platform.js", "../../../../../node_modules/@climblee/uv-ui/index.js"],
  "sourcesContent": ["'use strict'\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nexport function isArray (val) {\r\n  return toString.call(val) === '[object Array]'\r\n}\r\n\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nexport function isObject (val) {\r\n  return val !== null && typeof val === 'object'\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nexport function isDate (val) {\r\n  return toString.call(val) === '[object Date]'\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nexport function isURLSearchParams (val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams\r\n}\r\n\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nexport function forEach (obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj]\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj)\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 是否为boolean 值\r\n * @param val\r\n * @returns {boolean}\r\n */\r\nexport function isBoolean(val) {\r\n  return typeof val === 'boolean'\r\n}\r\n\r\n/**\r\n * 是否为真正的对象{} new Object\r\n * @param {any} obj - 检测的对象\r\n * @returns {boolean}\r\n */\r\nexport function isPlainObject(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Object]'\r\n}\r\n\r\n\r\n\r\n/**\r\n * Function equal to merge with the difference being that no reference\r\n * to original objects is kept.\r\n *\r\n * @see merge\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\r\n  let result = {}\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = deepMerge(result[key], val)\r\n    } else if (typeof val === 'object') {\r\n      result[key] = deepMerge({}, val)\r\n    } else {\r\n      result[key] = val\r\n    }\r\n  }\r\n  for (let i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue)\r\n  }\r\n  return result\r\n}\r\n\r\nexport function isUndefined (val) {\r\n  return typeof val === 'undefined'\r\n}\r\n", "'use strict'\r\n\r\nimport * as utils from './../utils'\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']')\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nexport default function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url\r\n  }\r\n\r\n  var serializedParams\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params)\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString()\r\n  } else {\r\n    var parts = []\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]'\r\n      } else {\r\n        val = [val]\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString()\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v)\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v))\r\n      })\r\n    })\r\n\r\n    serializedParams = parts.join('&')\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#')\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex)\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams\r\n  }\r\n\r\n  return url\r\n}\r\n", "'use strict'\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nexport default function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url)\r\n}\r\n", "'use strict'\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nexport default function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL\r\n}\r\n", "'use strict'\r\n\r\nimport isAbsoluteURL from '../helpers/isAbsoluteURL'\r\nimport combineURLs from '../helpers/combineURLs'\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nexport default function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL)\r\n  }\r\n  return requestedURL\r\n}\r\n", "/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nexport default function settle(resolve, reject, response) {\r\n  const validateStatus = response.config.validateStatus\r\n  const status = response.statusCode\r\n  if (status && (!validateStatus || validateStatus(status))) {\r\n    resolve(response)\r\n  } else {\r\n    reject(response)\r\n  }\r\n}\r\n", "import buildURL from '../helpers/buildURL'\r\nimport buildFullPath from '../core/buildFullPath'\r\nimport settle from '../core/settle'\r\nimport {isUndefined} from \"../utils\"\r\n\r\n/**\r\n * 返回可选值存在的配置\r\n * @param {Array} keys - 可选值数组\r\n * @param {Object} config2 - 配置\r\n * @return {{}} - 存在的配置项\r\n */\r\nconst mergeKeys = (keys, config2) => {\r\n  let config = {}\r\n  keys.forEach(prop => {\r\n    if (!isUndefined(config2[prop])) {\r\n      config[prop] = config2[prop]\r\n    }\r\n  })\r\n  return config\r\n}\r\nexport default (config) => {\r\n  return new Promise((resolve, reject) => {\r\n    let fullPath = buildURL(buildFullPath(config.baseURL, config.url), config.params, config.paramsSerializer)\r\n    const _config = {\r\n      url: fullPath,\r\n      header: config.header,\r\n      complete: (response) => {\r\n        config.fullPath = fullPath\r\n        response.config = config\r\n        response.rawData = response.data\r\n        try {\r\n          let jsonParseHandle = false\r\n          const forcedJSONParsingType = typeof config.forcedJSONParsing\r\n          if (forcedJSONParsingType === 'boolean') {\r\n            jsonParseHandle = config.forcedJSONParsing\r\n          } else if (forcedJSONParsingType === 'object') {\r\n            const includesMethod = config.forcedJSONParsing.include || []\r\n            jsonParseHandle = includesMethod.includes(config.method)\r\n          }\r\n\r\n          // 对可能字符串不是json 的情况容错\r\n          if (jsonParseHandle && typeof response.data === 'string') {\r\n            response.data = JSON.parse(response.data)\r\n          }\r\n          // eslint-disable-next-line no-empty\r\n        } catch (e) {\r\n        }\r\n        settle(resolve, reject, response)\r\n      }\r\n    }\r\n    let requestTask\r\n    if (config.method === 'UPLOAD') {\r\n      delete _config.header['content-type']\r\n      delete _config.header['Content-Type']\r\n      let otherConfig = {\r\n\r\n\r\n\r\n        filePath: config.filePath,\r\n        name: config.name\r\n      }\r\n      const optionalKeys = [\r\n\r\n        'files',\r\n\r\n\r\n        'file',\r\n\r\n\r\n        'timeout',\r\n\r\n        'formData'\r\n      ]\r\n      requestTask = uni.uploadFile({..._config, ...otherConfig, ...mergeKeys(optionalKeys, config)})\r\n    } else if (config.method === 'DOWNLOAD') {\r\n      const optionalKeys = [\r\n\r\n        'timeout',\r\n\r\n\r\n\r\n\r\n      ]\r\n      requestTask = uni.downloadFile({..._config, ...mergeKeys(optionalKeys, config)})\r\n    } else {\r\n      const optionalKeys = [\r\n        'data',\r\n        'method',\r\n\r\n        'timeout',\r\n\r\n        'dataType',\r\n\r\n        'responseType',\r\n\r\n\r\n\r\n\r\n\r\n        'withCredentials',\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      ]\r\n      requestTask = uni.request({..._config, ...mergeKeys(optionalKeys, config)})\r\n    }\r\n    if (config.getTask) {\r\n      config.getTask(requestTask, config)\r\n    }\r\n  })\r\n}\r\n", "import adapter from '../adapters/index'\r\n\r\n\r\nexport default (config) => {\r\n  return adapter(config)\r\n}\r\n", "'use strict'\r\n\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = []\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  })\r\n  return this.handlers.length - 1\r\n}\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null\r\n  }\r\n}\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  this.handlers.forEach(h => {\r\n    if (h !== null) {\r\n      fn(h)\r\n    }\r\n  })\r\n}\r\n\r\nexport default InterceptorManager\r\n", "import {deepMerge, isUndefined} from '../utils'\r\n\r\n/**\r\n * 合并局部配置优先的配置，如果局部有该配置项则用局部，如果全局有该配置项则用全局\r\n * @param {Array} keys - 配置项\r\n * @param {Object} globalsConfig - 当前的全局配置\r\n * @param {Object} config2 - 局部配置\r\n * @return {{}}\r\n */\r\nconst mergeKeys = (keys, globalsConfig, config2) => {\r\n  let config = {}\r\n  keys.forEach(prop => {\r\n    if (!isUndefined(config2[prop])) {\r\n      config[prop] = config2[prop]\r\n    } else if (!isUndefined(globalsConfig[prop])) {\r\n      config[prop] = globalsConfig[prop]\r\n    }\r\n  })\r\n  return config\r\n}\r\n/**\r\n *\r\n * @param globalsConfig - 当前实例的全局配置\r\n * @param config2 - 当前的局部配置\r\n * @return - 合并后的配置\r\n */\r\nexport default (globalsConfig, config2 = {}) => {\r\n  const method = config2.method || globalsConfig.method || 'GET'\r\n  let config = {\r\n    baseURL: config2.baseURL || globalsConfig.baseURL || '',\r\n    method: method,\r\n    url: config2.url || '',\r\n    params: config2.params || {},\r\n    custom: {...(globalsConfig.custom || {}), ...(config2.custom || {})},\r\n    header: deepMerge(globalsConfig.header || {}, config2.header || {})\r\n  }\r\n  const defaultToConfig2Keys = ['getTask', 'validateStatus', 'paramsSerializer', 'forcedJSONParsing']\r\n  config = {...config, ...mergeKeys(defaultToConfig2Keys, globalsConfig, config2)}\r\n\r\n  // eslint-disable-next-line no-empty\r\n  if (method === 'DOWNLOAD') {\r\n    const downloadKeys = [\r\n\r\n      'timeout',\r\n\r\n\r\n\r\n\r\n    ]\r\n    config = {...config, ...mergeKeys(downloadKeys, globalsConfig, config2)}\r\n  } else if (method === 'UPLOAD') {\r\n    delete config.header['content-type']\r\n    delete config.header['Content-Type']\r\n    const uploadKeys = [\r\n\r\n      'files',\r\n\r\n\r\n\r\n\r\n\r\n      'file',\r\n\r\n      'filePath',\r\n      'name',\r\n\r\n      'timeout',\r\n\r\n      'formData',\r\n    ]\r\n    uploadKeys.forEach(prop => {\r\n      if (!isUndefined(config2[prop])) {\r\n        config[prop] = config2[prop]\r\n      }\r\n    })\r\n\r\n    if (isUndefined(config.timeout) && !isUndefined(globalsConfig.timeout)) {\r\n      config['timeout'] = globalsConfig['timeout']\r\n    }\r\n\r\n  } else {\r\n    const defaultsKeys = [\r\n      'data',\r\n\r\n      'timeout',\r\n\r\n      'dataType',\r\n\r\n      'responseType',\r\n\r\n\r\n\r\n\r\n\r\n      'withCredentials',\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ]\r\n    config = {...config, ...mergeKeys(defaultsKeys, globalsConfig, config2)}\r\n  }\r\n\r\n  return config\r\n}\r\n", "/**\r\n * 默认的全局配置\r\n */\r\n\r\n\r\nexport default {\r\n  baseURL: '',\r\n  header: {},\r\n  method: 'GET',\r\n  dataType: 'json',\r\n  paramsSerializer: null,\r\n\r\n  responseType: 'text',\r\n\r\n  custom: {},\r\n\r\n  timeout: 60000,\r\n\r\n\r\n\r\n\r\n\r\n  withCredentials: false,\r\n\r\n\r\n\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300\r\n  },\r\n  // 是否尝试将响应数据json化\r\n  forcedJSONParsing: true\r\n}\r\n", "/* eslint-disable */\r\nvar clone = (function() {\r\n  'use strict';\r\n\r\n  function _instanceof(obj, type) {\r\n    return type != null && obj instanceof type;\r\n  }\r\n\r\n  var nativeMap;\r\n  try {\r\n    nativeMap = Map;\r\n  } catch(_) {\r\n    // maybe a reference error because no `Map`. Give it a dummy value that no\r\n    // value will ever be an instanceof.\r\n    nativeMap = function() {};\r\n  }\r\n\r\n  var nativeSet;\r\n  try {\r\n    nativeSet = Set;\r\n  } catch(_) {\r\n    nativeSet = function() {};\r\n  }\r\n\r\n  var nativePromise;\r\n  try {\r\n    nativePromise = Promise;\r\n  } catch(_) {\r\n    nativePromise = function() {};\r\n  }\r\n\r\n  /**\r\n   * Clones (copies) an Object using deep copying.\r\n   *\r\n   * This function supports circular references by default, but if you are certain\r\n   * there are no circular references in your object, you can save some CPU time\r\n   * by calling clone(obj, false).\r\n   *\r\n   * Caution: if `circular` is false and `parent` contains circular references,\r\n   * your program may enter an infinite loop and crash.\r\n   *\r\n   * @param `parent` - the object to be cloned\r\n   * @param `circular` - set to true if the object to be cloned may contain\r\n   *    circular references. (optional - true by default)\r\n   * @param `depth` - set to a number if the object is only to be cloned to\r\n   *    a particular depth. (optional - defaults to Infinity)\r\n   * @param `prototype` - sets the prototype to be used when cloning an object.\r\n   *    (optional - defaults to parent prototype).\r\n   * @param `includeNonEnumerable` - set to true if the non-enumerable properties\r\n   *    should be cloned as well. Non-enumerable properties on the prototype\r\n   *    chain will be ignored. (optional - false by default)\r\n   */\r\n  function clone(parent, circular, depth, prototype, includeNonEnumerable) {\r\n    if (typeof circular === 'object') {\r\n      depth = circular.depth;\r\n      prototype = circular.prototype;\r\n      includeNonEnumerable = circular.includeNonEnumerable;\r\n      circular = circular.circular;\r\n    }\r\n    // maintain two arrays for circular references, where corresponding parents\r\n    // and children have the same index\r\n    var allParents = [];\r\n    var allChildren = [];\r\n\r\n    var useBuffer = typeof Buffer != 'undefined';\r\n\r\n    if (typeof circular == 'undefined')\r\n      circular = true;\r\n\r\n    if (typeof depth == 'undefined')\r\n      depth = Infinity;\r\n\r\n    // recurse this function so we don't reset allParents and allChildren\r\n    function _clone(parent, depth) {\r\n      // cloning null always returns null\r\n      if (parent === null)\r\n        return null;\r\n\r\n      if (depth === 0)\r\n        return parent;\r\n\r\n      var child;\r\n      var proto;\r\n      if (typeof parent != 'object') {\r\n        return parent;\r\n      }\r\n\r\n      if (_instanceof(parent, nativeMap)) {\r\n        child = new nativeMap();\r\n      } else if (_instanceof(parent, nativeSet)) {\r\n        child = new nativeSet();\r\n      } else if (_instanceof(parent, nativePromise)) {\r\n        child = new nativePromise(function (resolve, reject) {\r\n          parent.then(function(value) {\r\n            resolve(_clone(value, depth - 1));\r\n          }, function(err) {\r\n            reject(_clone(err, depth - 1));\r\n          });\r\n        });\r\n      } else if (clone.__isArray(parent)) {\r\n        child = [];\r\n      } else if (clone.__isRegExp(parent)) {\r\n        child = new RegExp(parent.source, __getRegExpFlags(parent));\r\n        if (parent.lastIndex) child.lastIndex = parent.lastIndex;\r\n      } else if (clone.__isDate(parent)) {\r\n        child = new Date(parent.getTime());\r\n      } else if (useBuffer && Buffer.isBuffer(parent)) {\r\n        if (Buffer.from) {\r\n          // Node.js >= 5.10.0\r\n          child = Buffer.from(parent);\r\n        } else {\r\n          // Older Node.js versions\r\n          child = new Buffer(parent.length);\r\n          parent.copy(child);\r\n        }\r\n        return child;\r\n      } else if (_instanceof(parent, Error)) {\r\n        child = Object.create(parent);\r\n      } else {\r\n        if (typeof prototype == 'undefined') {\r\n          proto = Object.getPrototypeOf(parent);\r\n          child = Object.create(proto);\r\n        }\r\n        else {\r\n          child = Object.create(prototype);\r\n          proto = prototype;\r\n        }\r\n      }\r\n\r\n      if (circular) {\r\n        var index = allParents.indexOf(parent);\r\n\r\n        if (index != -1) {\r\n          return allChildren[index];\r\n        }\r\n        allParents.push(parent);\r\n        allChildren.push(child);\r\n      }\r\n\r\n      if (_instanceof(parent, nativeMap)) {\r\n        parent.forEach(function(value, key) {\r\n          var keyChild = _clone(key, depth - 1);\r\n          var valueChild = _clone(value, depth - 1);\r\n          child.set(keyChild, valueChild);\r\n        });\r\n      }\r\n      if (_instanceof(parent, nativeSet)) {\r\n        parent.forEach(function(value) {\r\n          var entryChild = _clone(value, depth - 1);\r\n          child.add(entryChild);\r\n        });\r\n      }\r\n\r\n      for (var i in parent) {\r\n        var attrs = Object.getOwnPropertyDescriptor(parent, i);\r\n        if (attrs) {\r\n          child[i] = _clone(parent[i], depth - 1);\r\n        }\r\n\r\n        try {\r\n          var objProperty = Object.getOwnPropertyDescriptor(parent, i);\r\n          if (objProperty.set === 'undefined') {\r\n            // no setter defined. Skip cloning this property\r\n            continue;\r\n          }\r\n          child[i] = _clone(parent[i], depth - 1);\r\n        } catch(e){\r\n          if (e instanceof TypeError) {\r\n            // when in strict mode, TypeError will be thrown if child[i] property only has a getter\r\n            // we can't do anything about this, other than inform the user that this property cannot be set.\r\n            continue\r\n          } else if (e instanceof ReferenceError) {\r\n            //this may happen in non strict mode\r\n            continue\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (Object.getOwnPropertySymbols) {\r\n        var symbols = Object.getOwnPropertySymbols(parent);\r\n        for (var i = 0; i < symbols.length; i++) {\r\n          // Don't need to worry about cloning a symbol because it is a primitive,\r\n          // like a number or string.\r\n          var symbol = symbols[i];\r\n          var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\r\n          if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\r\n            continue;\r\n          }\r\n          child[symbol] = _clone(parent[symbol], depth - 1);\r\n          Object.defineProperty(child, symbol, descriptor);\r\n        }\r\n      }\r\n\r\n      if (includeNonEnumerable) {\r\n        var allPropertyNames = Object.getOwnPropertyNames(parent);\r\n        for (var i = 0; i < allPropertyNames.length; i++) {\r\n          var propertyName = allPropertyNames[i];\r\n          var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\r\n          if (descriptor && descriptor.enumerable) {\r\n            continue;\r\n          }\r\n          child[propertyName] = _clone(parent[propertyName], depth - 1);\r\n          Object.defineProperty(child, propertyName, descriptor);\r\n        }\r\n      }\r\n\r\n      return child;\r\n    }\r\n\r\n    return _clone(parent, depth);\r\n  }\r\n\r\n  /**\r\n   * Simple flat clone using prototype, accepts only objects, usefull for property\r\n   * override on FLAT configuration object (no nested props).\r\n   *\r\n   * USE WITH CAUTION! This may not behave as you wish if you do not know how this\r\n   * works.\r\n   */\r\n  clone.clonePrototype = function clonePrototype(parent) {\r\n    if (parent === null)\r\n      return null;\r\n\r\n    var c = function () {};\r\n    c.prototype = parent;\r\n    return new c();\r\n  };\r\n\r\n// private utility functions\r\n\r\n  function __objToStr(o) {\r\n    return Object.prototype.toString.call(o);\r\n  }\r\n  clone.__objToStr = __objToStr;\r\n\r\n  function __isDate(o) {\r\n    return typeof o === 'object' && __objToStr(o) === '[object Date]';\r\n  }\r\n  clone.__isDate = __isDate;\r\n\r\n  function __isArray(o) {\r\n    return typeof o === 'object' && __objToStr(o) === '[object Array]';\r\n  }\r\n  clone.__isArray = __isArray;\r\n\r\n  function __isRegExp(o) {\r\n    return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\r\n  }\r\n  clone.__isRegExp = __isRegExp;\r\n\r\n  function __getRegExpFlags(re) {\r\n    var flags = '';\r\n    if (re.global) flags += 'g';\r\n    if (re.ignoreCase) flags += 'i';\r\n    if (re.multiline) flags += 'm';\r\n    return flags;\r\n  }\r\n  clone.__getRegExpFlags = __getRegExpFlags;\r\n\r\n  return clone;\r\n})();\r\n\r\nexport default clone\r\n", "/**\r\n * @Class Request\r\n * @description luch-request http请求插件\r\n * @Author lu-ch\r\n * @Email webwork.s@qq.com\r\n * 文档: https://www.quanzhan.co/luch-request/\r\n * github: https://github.com/lei-mu/luch-request\r\n * DCloud: http://ext.dcloud.net.cn/plugin?id=392\r\n */\r\n\r\n\r\nimport dispatchRequest from './dispatchRequest'\r\nimport InterceptorManager from './InterceptorManager'\r\nimport mergeConfig from './mergeConfig'\r\nimport defaults from './defaults'\r\nimport { isPlainObject } from '../utils'\r\nimport clone from '../utils/clone'\r\n\r\nexport default class Request {\r\n  /**\r\n   * @param {Object} arg - 全局配置\r\n   * @param {String} arg.baseURL - 全局根路径\r\n   * @param {Object} arg.header - 全局header\r\n   * @param {String} arg.method = [GET|POST|PUT|DELETE|CONNECT|HEAD|OPTIONS|TRACE] - 全局默认请求方式\r\n   * @param {String} arg.dataType = [json] - 全局默认的dataType\r\n   * @param {String} arg.responseType = [text|arraybuffer] - 全局默认的responseType。支付宝小程序不支持\r\n   * @param {Object} arg.custom - 全局默认的自定义参数\r\n   * @param {Number} arg.timeout - 全局默认的超时时间，单位 ms。默认60000。H5(HBuilderX 2.9.9+)、APP(HBuilderX 2.9.9+)、微信小程序（2.10.0）、支付宝小程序\r\n   * @param {Boolean} arg.sslVerify - 全局默认的是否验证 ssl 证书。默认true.仅App安卓端支持（HBuilderX 2.3.3+）\r\n   * @param {Boolean} arg.withCredentials - 全局默认的跨域请求时是否携带凭证（cookies）。默认false。仅H5支持（HBuilderX 2.6.15+）\r\n   * @param {Boolean} arg.firstIpv4 - 全DNS解析时优先使用ipv4。默认false。仅 App-Android 支持 (HBuilderX 2.8.0+)\r\n   * @param {Function(statusCode):Boolean} arg.validateStatus - 全局默认的自定义验证器。默认statusCode >= 200 && statusCode < 300\r\n   */\r\n  constructor(arg = {}) {\r\n    if (!isPlainObject(arg)) {\r\n      arg = {}\r\n      console.warn('设置全局参数必须接收一个Object')\r\n    }\r\n    this.config = clone({...defaults, ...arg})\r\n    this.interceptors = {\r\n      request: new InterceptorManager(),\r\n      response: new InterceptorManager()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @Function\r\n   * @param {Request~setConfigCallback} f - 设置全局默认配置\r\n   */\r\n  setConfig(f) {\r\n    this.config = f(this.config)\r\n  }\r\n\r\n  middleware(config) {\r\n    config = mergeConfig(this.config, config)\r\n    let chain = [dispatchRequest, undefined]\r\n    let promise = Promise.resolve(config)\r\n\r\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n      chain.unshift(interceptor.fulfilled, interceptor.rejected)\r\n    })\r\n\r\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n      chain.push(interceptor.fulfilled, interceptor.rejected)\r\n    })\r\n\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift())\r\n    }\r\n\r\n    return promise\r\n  }\r\n\r\n  /**\r\n   * @Function\r\n   * @param {Object} config - 请求配置项\r\n   * @prop {String} options.url - 请求路径\r\n   * @prop {Object} options.data - 请求参数\r\n   * @prop {Object} [options.responseType = config.responseType] [text|arraybuffer] - 响应的数据类型\r\n   * @prop {Object} [options.dataType = config.dataType] - 如果设为 json，会尝试对返回的数据做一次 JSON.parse\r\n   * @prop {Object} [options.header = config.header] - 请求header\r\n   * @prop {Object} [options.method = config.method] - 请求方法\r\n   * @returns {Promise<unknown>}\r\n   */\r\n  request(config = {}) {\r\n    return this.middleware(config)\r\n  }\r\n\r\n  get(url, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      method: 'GET',\r\n      ...options\r\n    })\r\n  }\r\n\r\n  post(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'POST',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n  put(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'PUT',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  delete(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'DELETE',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  connect(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'CONNECT',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  head(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'HEAD',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  options(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'OPTIONS',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  trace(url, data, options = {}) {\r\n    return this.middleware({\r\n      url,\r\n      data,\r\n      method: 'TRACE',\r\n      ...options\r\n    })\r\n  }\r\n\r\n\r\n\r\n  upload(url, config = {}) {\r\n    config.url = url\r\n    config.method = 'UPLOAD'\r\n    return this.middleware(config)\r\n  }\r\n\r\n  download(url, config = {}) {\r\n    config.url = url\r\n    config.method = 'DOWNLOAD'\r\n    return this.middleware(config)\r\n  }\r\n\r\n  get version () {\r\n    return '3.1.0'\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * setConfig回调\r\n * @return {Object} - 返回操作后的config\r\n * @callback Request~setConfigCallback\r\n * @param {Object} config - 全局默认config\r\n */\r\n", "import Request from './core/Request'\r\nexport default Request\r\n", "import { number, empty } from './test.js'\r\nimport { round } from './digit.js'\r\n/**\r\n * @description 如果value小于min，取min；如果value大于max，取max\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number} value\r\n */\r\nfunction range(min = 0, max = 0, value = 0) {\r\n\treturn Math.max(min, Math.min(max, Number(value)))\r\n}\r\n\r\n/**\r\n * @description 用于获取用户传递值的px值  如果用户传递了\"xxpx\"或者\"xxrpx\"，取出其数值部分，如果是\"xxxrpx\"还需要用过uni.upx2px进行转换\r\n * @param {number|string} value 用户传递值的px值\r\n * @param {boolean} unit\r\n * @returns {number|string}\r\n */\r\nfunction getPx(value, unit = false) {\r\n\tif (number(value)) {\r\n\t\treturn unit ? `${value}px` : Number(value)\r\n\t}\r\n\t// 如果带有rpx，先取出其数值部分，再转为px值\r\n\tif (/(rpx|upx)$/.test(value)) {\r\n\t\treturn unit ? `${uni.upx2px(parseInt(value))}px` : Number(uni.upx2px(parseInt(value)))\r\n\t}\r\n\treturn unit ? `${parseInt(value)}px` : parseInt(value)\r\n}\r\n\r\n/**\r\n * @description 进行延时，以达到可以简写代码的目的 比如: await uni.$uv.sleep(20)将会阻塞20ms\r\n * @param {number} value 堵塞时间 单位ms 毫秒\r\n * @returns {Promise} 返回promise\r\n */\r\nfunction sleep(value = 30) {\r\n\treturn new Promise((resolve) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve()\r\n\t\t}, value)\r\n\t})\r\n}\r\n/**\r\n * @description 运行期判断平台\r\n * @returns {string} 返回所在平台(小写)\r\n * @link 运行期判断平台 https://uniapp.dcloud.io/frame?id=判断平台\r\n */\r\nfunction os() {\r\n\treturn uni.getSystemInfoSync().platform.toLowerCase()\r\n}\r\n/**\r\n * @description 获取系统信息同步接口\r\n * @link 获取系统信息同步接口 https://uniapp.dcloud.io/api/system/info?id=getsysteminfosync\r\n */\r\nfunction sys() {\r\n\treturn uni.getSystemInfoSync()\r\n}\r\n\r\n/**\r\n * @description 取一个区间数\r\n * @param {Number} min 最小值\r\n * @param {Number} max 最大值\r\n */\r\nfunction random(min, max) {\r\n\tif (min >= 0 && max > 0 && max >= min) {\r\n\t\tconst gab = max - min + 1\r\n\t\treturn Math.floor(Math.random() * gab + min)\r\n\t}\r\n\treturn 0\r\n}\r\n\r\n/**\r\n * @param {Number} len uuid的长度\r\n * @param {Boolean} firstU 将返回的首字母置为\"u\"\r\n * @param {Nubmer} radix 生成uuid的基数(意味着返回的字符串都是这个基数),2-二进制,8-八进制,10-十进制,16-十六进制\r\n */\r\nfunction guid(len = 32, firstU = true, radix = null) {\r\n\tconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\r\n\tconst uuid = []\r\n\tradix = radix || chars.length\r\n\r\n\tif (len) {\r\n\t\t// 如果指定uuid长度,只是取随机的字符,0|x为位运算,能去掉x的小数位,返回整数位\r\n\t\tfor (let i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix]\r\n\t} else {\r\n\t\tlet r\r\n\t\t// rfc4122标准要求返回的uuid中,某些位为固定的字符\r\n\t\tuuid[8] = uuid[13] = uuid[18] = uuid[23] = '-'\r\n\t\tuuid[14] = '4'\r\n\r\n\t\tfor (let i = 0; i < 36; i++) {\r\n\t\t\tif (!uuid[i]) {\r\n\t\t\t\tr = 0 | Math.random() * 16\r\n\t\t\t\tuuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// 移除第一个字符,并用u替代,因为第一个字符为数值时,该guuid不能用作id或者class\r\n\tif (firstU) {\r\n\t\tuuid.shift()\r\n\t\treturn `u${uuid.join('')}`\r\n\t}\r\n\treturn uuid.join('')\r\n}\r\n\r\n/**\r\n* @description 获取父组件的参数，因为支付宝小程序不支持provide/inject的写法\r\n   this.$parent在非H5中，可以准确获取到父组件，但是在H5中，需要多次this.$parent.$parent.xxx\r\n   这里默认值等于undefined有它的含义，因为最顶层元素(组件)的$parent就是undefined，意味着不传name\r\n   值(默认为undefined)，就是查找最顶层的$parent\r\n*  @param {string|undefined} name 父组件的参数名\r\n*/\r\nfunction $parent(name = undefined) {\r\n\tlet parent = this.$parent\r\n\t// 通过while历遍，这里主要是为了H5需要多层解析的问题\r\n\twhile (parent) {\r\n\t\t// 父组件\r\n\t\tif (parent.$options && parent.$options.name !== name) {\r\n\t\t\t// 如果组件的name不相等，继续上一级寻找\r\n\t\t\tparent = parent.$parent\r\n\t\t} else {\r\n\t\t\treturn parent\r\n\t\t}\r\n\t}\r\n\treturn false\r\n}\r\n\r\n/**\r\n * @description 样式转换\r\n * 对象转字符串，或者字符串转对象\r\n * @param {object | string} customStyle 需要转换的目标\r\n * @param {String} target 转换的目的，object-转为对象，string-转为字符串\r\n * @returns {object|string}\r\n */\r\nfunction addStyle(customStyle, target = 'object') {\r\n\t// 字符串转字符串，对象转对象情形，直接返回\r\n\tif (empty(customStyle) || typeof(customStyle) === 'object' && target === 'object' || target === 'string' &&\r\n\t\ttypeof(customStyle) === 'string') {\r\n\t\treturn customStyle\r\n\t}\r\n\t// 字符串转对象\r\n\tif (target === 'object') {\r\n\t\t// 去除字符串样式中的两端空格(中间的空格不能去掉，比如padding: 20px 0如果去掉了就错了)，空格是无用的\r\n\t\tcustomStyle = trim(customStyle)\r\n\t\t// 根据\";\"将字符串转为数组形式\r\n\t\tconst styleArray = customStyle.split(';')\r\n\t\tconst style = {}\r\n\t\t// 历遍数组，拼接成对象\r\n\t\tfor (let i = 0; i < styleArray.length; i++) {\r\n\t\t\t// 'font-size:20px;color:red;'，如此最后字符串有\";\"的话，会导致styleArray最后一个元素为空字符串，这里需要过滤\r\n\t\t\tif (styleArray[i]) {\r\n\t\t\t\tconst item = styleArray[i].split(':')\r\n\t\t\t\tstyle[trim(item[0])] = trim(item[1])\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\t// 这里为对象转字符串形式\r\n\tlet string = ''\r\n\tfor (const i in customStyle) {\r\n\t\t// 驼峰转为中划线的形式，否则css内联样式，无法识别驼峰样式属性名\r\n\t\tconst key = i.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\tstring += `${key}:${customStyle[i]};`\r\n\t}\r\n\t// 去除两端空格\r\n\treturn trim(string)\r\n}\r\n\r\n/**\r\n * @description 添加单位，如果有rpx，upx，%，px等单位结尾或者值为auto，直接返回，否则加上px单位结尾\r\n * @param {string|number} value 需要添加单位的值\r\n * @param {string} unit 添加的单位名 比如px\r\n */\r\nfunction addUnit(value = 'auto', unit = uni?.$uv?.config?.unit ? uni?.$uv?.config?.unit : 'px') {\r\n\tvalue = String(value)\r\n\t// 用uvui内置验证规则中的number判断是否为数值\r\n\treturn number(value) ? `${value}${unit}` : value\r\n}\r\n\r\n/**\r\n * @description 深度克隆\r\n * @param {object} obj 需要深度克隆的对象\r\n * @param cache 缓存\r\n * @returns {*} 克隆后的对象或者原值（不是对象）\r\n */\r\nfunction deepClone(obj, cache = new WeakMap()) {\r\n\tif (obj === null || typeof obj !== 'object') return obj;\r\n\tif (cache.has(obj)) return cache.get(obj);\r\n\tlet clone;\r\n\tif (obj instanceof Date) {\r\n\t\tclone = new Date(obj.getTime());\r\n\t} else if (obj instanceof RegExp) {\r\n\t\tclone = new RegExp(obj);\r\n\t} else if (obj instanceof Map) {\r\n\t\tclone = new Map(Array.from(obj, ([key, value]) => [key, deepClone(value, cache)]));\r\n\t} else if (obj instanceof Set) {\r\n\t\tclone = new Set(Array.from(obj, value => deepClone(value, cache)));\r\n\t} else if (Array.isArray(obj)) {\r\n\t\tclone = obj.map(value => deepClone(value, cache));\r\n\t} else if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n\t\tclone = Object.create(Object.getPrototypeOf(obj));\r\n\t\tcache.set(obj, clone);\r\n\t\tfor (const [key, value] of Object.entries(obj)) {\r\n\t\t\tclone[key] = deepClone(value, cache);\r\n\t\t}\r\n\t} else {\r\n\t\tclone = Object.assign({}, obj);\r\n\t}\r\n\tcache.set(obj, clone);\r\n\treturn clone;\r\n}\r\n\r\n/**\r\n * @description JS对象深度合并\r\n * @param {object} target 需要拷贝的对象\r\n * @param {object} source 拷贝的来源对象\r\n * @returns {object|boolean} 深度合并后的对象或者false（入参有不是对象）\r\n */\r\nfunction deepMerge(target = {}, source = {}) {\r\n\ttarget = deepClone(target)\r\n\tif (typeof target !== 'object' || target === null || typeof source !== 'object' || source === null) return target;\r\n\tconst merged = Array.isArray(target) ? target.slice() : Object.assign({}, target);\r\n\tfor (const prop in source) {\r\n\t\tif (!source.hasOwnProperty(prop)) continue;\r\n\t\tconst sourceValue = source[prop];\r\n\t\tconst targetValue = merged[prop];\r\n\t\tif (sourceValue instanceof Date) {\r\n\t\t\tmerged[prop] = new Date(sourceValue);\r\n\t\t} else if (sourceValue instanceof RegExp) {\r\n\t\t\tmerged[prop] = new RegExp(sourceValue);\r\n\t\t} else if (sourceValue instanceof Map) {\r\n\t\t\tmerged[prop] = new Map(sourceValue);\r\n\t\t} else if (sourceValue instanceof Set) {\r\n\t\t\tmerged[prop] = new Set(sourceValue);\r\n\t\t} else if (typeof sourceValue === 'object' && sourceValue !== null) {\r\n\t\t\tmerged[prop] = deepMerge(targetValue, sourceValue);\r\n\t\t} else {\r\n\t\t\tmerged[prop] = sourceValue;\r\n\t\t}\r\n\t}\r\n\treturn merged;\r\n}\r\n\r\n/**\r\n * @description error提示\r\n * @param {*} err 错误内容\r\n */\r\nfunction error(err) {\r\n\t// 开发环境才提示，生产环境不会提示\r\n\tif (process.env.NODE_ENV === 'development') {\r\n\t\tconsole.error(`uvui提示：${err}`)\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 打乱数组\r\n * @param {array} array 需要打乱的数组\r\n * @returns {array} 打乱后的数组\r\n */\r\nfunction randomArray(array = []) {\r\n\t// 原理是sort排序,Math.random()产生0<= x < 1之间的数,会导致x-0.05大于或者小于0\r\n\treturn array.sort(() => Math.random() - 0.5)\r\n}\r\n\r\n// padStart 的 polyfill，因为某些机型或情况，还无法支持es7的padStart，比如电脑版的微信小程序\r\n// 所以这里做一个兼容polyfill的兼容处理\r\nif (!String.prototype.padStart) {\r\n\t// 为了方便表示这里 fillString 用了ES6 的默认参数，不影响理解\r\n\tString.prototype.padStart = function(maxLength, fillString = ' ') {\r\n\t\tif (Object.prototype.toString.call(fillString) !== '[object String]') {\r\n\t\t\tthrow new TypeError(\r\n\t\t\t\t'fillString must be String'\r\n\t\t\t)\r\n\t\t}\r\n\t\tconst str = this\r\n\t\t// 返回 String(str) 这里是为了使返回的值是字符串字面量，在控制台中更符合直觉\r\n\t\tif (str.length >= maxLength) return String(str)\r\n\r\n\t\tconst fillLength = maxLength - str.length\r\n\t\tlet times = Math.ceil(fillLength / fillString.length)\r\n\t\twhile (times >>= 1) {\r\n\t\t\tfillString += fillString\r\n\t\t\tif (times === 1) {\r\n\t\t\t\tfillString += fillString\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fillString.slice(0, fillLength) + str\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 格式化时间\r\n * @param {String|Number} dateTime 需要格式化的时间戳\r\n * @param {String} fmt 格式化规则 yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合 默认yyyy-mm-dd\r\n * @returns {string} 返回格式化后的字符串\r\n */\r\nfunction timeFormat(dateTime = null, formatStr = 'yyyy-mm-dd') {\r\n\tlet date\r\n\t// 若传入时间为假值，则取当前时间\r\n\tif (!dateTime) {\r\n\t\tdate = new Date()\r\n\t}\r\n\t// 若为unix秒时间戳，则转为毫秒时间戳（逻辑有点奇怪，但不敢改，以保证历史兼容）\r\n\telse if (/^\\d{10}$/.test(dateTime?.toString().trim())) {\r\n\t\tdate = new Date(dateTime * 1000)\r\n\t}\r\n\t// 若用户传入字符串格式时间戳，new Date无法解析，需做兼容\r\n\telse if (typeof dateTime === 'string' && /^\\d+$/.test(dateTime.trim())) {\r\n\t\tdate = new Date(Number(dateTime))\r\n\t}\r\n\t// 处理平台性差异，在Safari/Webkit中，new Date仅支持/作为分割符的字符串时间\r\n\t// 处理 '2022-07-10 01:02:03'，跳过 '2022-07-10T01:02:03'\r\n\telse if (typeof dateTime === 'string' && dateTime.includes('-') && !dateTime.includes('T')) {\r\n\t\tdate = new Date(dateTime.replace(/-/g, '/'))\r\n\t}\r\n\t// 其他都认为符合 RFC 2822 规范\r\n\telse {\r\n\t\tdate = new Date(dateTime)\r\n\t}\r\n\r\n\tconst timeSource = {\r\n\t\t'y': date.getFullYear().toString(), // 年\r\n\t\t'm': (date.getMonth() + 1).toString().padStart(2, '0'), // 月\r\n\t\t'd': date.getDate().toString().padStart(2, '0'), // 日\r\n\t\t'h': date.getHours().toString().padStart(2, '0'), // 时\r\n\t\t'M': date.getMinutes().toString().padStart(2, '0'), // 分\r\n\t\t's': date.getSeconds().toString().padStart(2, '0') // 秒\r\n\t\t// 有其他格式化字符需求可以继续添加，必须转化成字符串\r\n\t}\r\n\r\n\tfor (const key in timeSource) {\r\n\t\tconst [ret] = new RegExp(`${key}+`).exec(formatStr) || []\r\n\t\tif (ret) {\r\n\t\t\t// 年可能只需展示两位\r\n\t\t\tconst beginIndex = key === 'y' && ret.length === 2 ? 2 : 0\r\n\t\t\tformatStr = formatStr.replace(ret, timeSource[key].slice(beginIndex))\r\n\t\t}\r\n\t}\r\n\r\n\treturn formatStr\r\n}\r\n\r\n/**\r\n * @description 时间戳转为多久之前\r\n * @param {String|Number} timestamp 时间戳\r\n * @param {String|Boolean} format\r\n * 格式化规则如果为时间格式字符串，超出一定时间范围，返回固定的时间格式；\r\n * 如果为布尔值false，无论什么时间，都返回多久以前的格式\r\n * @returns {string} 转化后的内容\r\n */\r\nfunction timeFrom(timestamp = null, format = 'yyyy-mm-dd') {\r\n\tif (timestamp == null) timestamp = Number(new Date())\r\n\ttimestamp = parseInt(timestamp)\r\n\t// 判断用户输入的时间戳是秒还是毫秒,一般前端js获取的时间戳是毫秒(13位),后端传过来的为秒(10位)\r\n\tif (timestamp.toString().length == 10) timestamp *= 1000\r\n\tlet timer = (new Date()).getTime() - timestamp\r\n\ttimer = parseInt(timer / 1000)\r\n\t// 如果小于5分钟,则返回\"刚刚\",其他以此类推\r\n\tlet tips = ''\r\n\tswitch (true) {\r\n\t\tcase timer < 300:\r\n\t\t\ttips = '刚刚'\r\n\t\t\tbreak\r\n\t\tcase timer >= 300 && timer < 3600:\r\n\t\t\ttips = `${parseInt(timer / 60)}分钟前`\r\n\t\t\tbreak\r\n\t\tcase timer >= 3600 && timer < 86400:\r\n\t\t\ttips = `${parseInt(timer / 3600)}小时前`\r\n\t\t\tbreak\r\n\t\tcase timer >= 86400 && timer < 2592000:\r\n\t\t\ttips = `${parseInt(timer / 86400)}天前`\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\t// 如果format为false，则无论什么时间戳，都显示xx之前\r\n\t\t\tif (format === false) {\r\n\t\t\t\tif (timer >= 2592000 && timer < 365 * 86400) {\r\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 30))}个月前`\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttips = `${parseInt(timer / (86400 * 365))}年前`\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttips = timeFormat(timestamp, format)\r\n\t\t\t}\r\n\t}\r\n\treturn tips\r\n}\r\n\r\n/**\r\n * @description 去除空格\r\n * @param String str 需要去除空格的字符串\r\n * @param String pos both(左右)|left|right|all 默认both\r\n */\r\nfunction trim(str, pos = 'both') {\r\n\tstr = String(str)\r\n\tif (pos == 'both') {\r\n\t\treturn str.replace(/^\\s+|\\s+$/g, '')\r\n\t}\r\n\tif (pos == 'left') {\r\n\t\treturn str.replace(/^\\s*/, '')\r\n\t}\r\n\tif (pos == 'right') {\r\n\t\treturn str.replace(/(\\s*$)/g, '')\r\n\t}\r\n\tif (pos == 'all') {\r\n\t\treturn str.replace(/\\s+/g, '')\r\n\t}\r\n\treturn str\r\n}\r\n\r\n/**\r\n * @description 对象转url参数\r\n * @param {object} data,对象\r\n * @param {Boolean} isPrefix,是否自动加上\"?\"\r\n * @param {string} arrayFormat 规则 indices|brackets|repeat|comma\r\n */\r\nfunction queryParams(data = {}, isPrefix = true, arrayFormat = 'brackets') {\r\n\tconst prefix = isPrefix ? '?' : ''\r\n\tconst _result = []\r\n\tif (['indices', 'brackets', 'repeat', 'comma'].indexOf(arrayFormat) == -1) arrayFormat = 'brackets'\r\n\tfor (const key in data) {\r\n\t\tconst value = data[key]\r\n\t\t// 去掉为空的参数\r\n\t\tif (['', undefined, null].indexOf(value) >= 0) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\t// 如果值为数组，另行处理\r\n\t\tif (value.constructor === Array) {\r\n\t\t\t// e.g. {ids: [1, 2, 3]}\r\n\t\t\tswitch (arrayFormat) {\r\n\t\t\t\tcase 'indices':\r\n\t\t\t\t\t// 结果: ids[0]=1&ids[1]=2&ids[2]=3\r\n\t\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\t\t_result.push(`${key}[${i}]=${value[i]}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'brackets':\r\n\t\t\t\t\t// 结果: ids[]=1&ids[]=2&ids[]=3\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'repeat':\r\n\t\t\t\t\t// 结果: ids=1&ids=2&ids=3\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'comma':\r\n\t\t\t\t\t// 结果: ids=1,2,3\r\n\t\t\t\t\tlet commaStr = ''\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\tcommaStr += (commaStr ? ',' : '') + _value\r\n\t\t\t\t\t})\r\n\t\t\t\t\t_result.push(`${key}=${commaStr}`)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue.forEach((_value) => {\r\n\t\t\t\t\t\t_result.push(`${key}[]=${_value}`)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t_result.push(`${key}=${value}`)\r\n\t\t}\r\n\t}\r\n\treturn _result.length ? prefix + _result.join('&') : ''\r\n}\r\n\r\n/**\r\n * 显示消息提示框\r\n * @param {String} title 提示的内容，长度与 icon 取值有关。\r\n * @param {Number} duration 提示的延迟时间，单位毫秒，默认：2000\r\n */\r\nfunction toast(title, duration = 2000) {\r\n\tuni.showToast({\r\n\t\ttitle: String(title),\r\n\t\ticon: 'none',\r\n\t\tduration\r\n\t})\r\n}\r\n\r\n/**\r\n * @description 根据主题type值,获取对应的图标\r\n * @param {String} type 主题名称,primary|info|error|warning|success\r\n * @param {boolean} fill 是否使用fill填充实体的图标\r\n */\r\nfunction type2icon(type = 'success', fill = false) {\r\n\t// 如果非预置值,默认为success\r\n\tif (['primary', 'info', 'error', 'warning', 'success'].indexOf(type) == -1) type = 'success'\r\n\tlet iconName = ''\r\n\t// 目前(2019-12-12),info和primary使用同一个图标\r\n\tswitch (type) {\r\n\t\tcase 'primary':\r\n\t\t\ticonName = 'info-circle'\r\n\t\t\tbreak\r\n\t\tcase 'info':\r\n\t\t\ticonName = 'info-circle'\r\n\t\t\tbreak\r\n\t\tcase 'error':\r\n\t\t\ticonName = 'close-circle'\r\n\t\t\tbreak\r\n\t\tcase 'warning':\r\n\t\t\ticonName = 'error-circle'\r\n\t\t\tbreak\r\n\t\tcase 'success':\r\n\t\t\ticonName = 'checkmark-circle'\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\ticonName = 'checkmark-circle'\r\n\t}\r\n\t// 是否是实体类型,加上-fill,在icon组件库中,实体的类名是后面加-fill的\r\n\tif (fill) iconName += '-fill'\r\n\treturn iconName\r\n}\r\n\r\n/**\r\n * @description 数字格式化\r\n * @param {number|string} number 要格式化的数字\r\n * @param {number} decimals 保留几位小数\r\n * @param {string} decimalPoint 小数点符号\r\n * @param {string} thousandsSeparator 千分位符号\r\n * @returns {string} 格式化后的数字\r\n */\r\nfunction priceFormat(number, decimals = 0, decimalPoint = '.', thousandsSeparator = ',') {\r\n\tnumber = (`${number}`).replace(/[^0-9+-Ee.]/g, '')\r\n\tconst n = !isFinite(+number) ? 0 : +number\r\n\tconst prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\r\n\tconst sep = (typeof thousandsSeparator === 'undefined') ? ',' : thousandsSeparator\r\n\tconst dec = (typeof decimalPoint === 'undefined') ? '.' : decimalPoint\r\n\tlet s = ''\r\n\r\n\ts = (prec ? round(n, prec) + '' : `${Math.round(n)}`).split('.')\r\n\tconst re = /(-?\\d+)(\\d{3})/\r\n\twhile (re.test(s[0])) {\r\n\t\ts[0] = s[0].replace(re, `$1${sep}$2`)\r\n\t}\r\n\r\n\tif ((s[1] || '').length < prec) {\r\n\t\ts[1] = s[1] || ''\r\n\t\ts[1] += new Array(prec - s[1].length + 1).join('0')\r\n\t}\r\n\treturn s.join(dec)\r\n}\r\n\r\n/**\r\n * @description 获取duration值\r\n * 如果带有ms或者s直接返回，如果大于一定值，认为是ms单位，小于一定值，认为是s单位\r\n * 比如以30位阈值，那么300大于30，可以理解为用户想要的是300ms，而不是想花300s去执行一个动画\r\n * @param {String|number} value 比如: \"1s\"|\"100ms\"|1|100\r\n * @param {boolean} unit  提示: 如果是false 默认返回number\r\n * @return {string|number}\r\n */\r\nfunction getDuration(value, unit = true) {\r\n\tconst valueNum = parseInt(value)\r\n\tif (unit) {\r\n\t\tif (/s$/.test(value)) return value\r\n\t\treturn value > 30 ? `${value}ms` : `${value}s`\r\n\t}\r\n\tif (/ms$/.test(value)) return valueNum\r\n\tif (/s$/.test(value)) return valueNum > 30 ? valueNum : valueNum * 1000\r\n\treturn valueNum\r\n}\r\n\r\n/**\r\n * @description 日期的月或日补零操作\r\n * @param {String} value 需要补零的值\r\n */\r\nfunction padZero(value) {\r\n\treturn `00${value}`.slice(-2)\r\n}\r\n\r\n/**\r\n * @description 在uv-form的子组件内容发生变化，或者失去焦点时，尝试通知uv-form执行校验方法\r\n * @param {*} instance\r\n * @param {*} event\r\n */\r\nfunction formValidate(instance, event) {\r\n\tconst formItem = $parent.call(instance, 'uv-form-item')\r\n\tconst form = $parent.call(instance, 'uv-form')\r\n\t// 如果发生变化的input或者textarea等，其父组件中有uv-form-item或者uv-form等，就执行form的validate方法\r\n\t// 同时将form-item的pros传递给form，让其进行精确对象验证\r\n\tif (formItem && form) {\r\n\t\tform.validateField(formItem.prop, () => {}, event)\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 获取某个对象下的属性，用于通过类似'a.b.c'的形式去获取一个对象的的属性的形式\r\n * @param {object} obj 对象\r\n * @param {string} key 需要获取的属性字段\r\n * @returns {*}\r\n */\r\nfunction getProperty(obj, key) {\r\n\tif (!obj) {\r\n\t\treturn\r\n\t}\r\n\tif (typeof key !== 'string' || key === '') {\r\n\t\treturn ''\r\n\t}\r\n\tif (key.indexOf('.') !== -1) {\r\n\t\tconst keys = key.split('.')\r\n\t\tlet firstObj = obj[keys[0]] || {}\r\n\r\n\t\tfor (let i = 1; i < keys.length; i++) {\r\n\t\t\tif (firstObj) {\r\n\t\t\t\tfirstObj = firstObj[keys[i]]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn firstObj\r\n\t}\r\n\treturn obj[key]\r\n}\r\n\r\n/**\r\n * @description 设置对象的属性值，如果'a.b.c'的形式进行设置\r\n * @param {object} obj 对象\r\n * @param {string} key 需要设置的属性\r\n * @param {string} value 设置的值\r\n */\r\nfunction setProperty(obj, key, value) {\r\n\tif (!obj) {\r\n\t\treturn\r\n\t}\r\n\t// 递归赋值\r\n\tconst inFn = function(_obj, keys, v) {\r\n\t\t// 最后一个属性key\r\n\t\tif (keys.length === 1) {\r\n\t\t\t_obj[keys[0]] = v\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// 0~length-1个key\r\n\t\twhile (keys.length > 1) {\r\n\t\t\tconst k = keys[0]\r\n\t\t\tif (!_obj[k] || (typeof _obj[k] !== 'object')) {\r\n\t\t\t\t_obj[k] = {}\r\n\t\t\t}\r\n\t\t\tconst key = keys.shift()\r\n\t\t\t// 自调用判断是否存在属性，不存在则自动创建对象\r\n\t\t\tinFn(_obj[k], keys, v)\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof key !== 'string' || key === '') {\r\n\r\n\t} else if (key.indexOf('.') !== -1) { // 支持多层级赋值操作\r\n\t\tconst keys = key.split('.')\r\n\t\tinFn(obj, keys, value)\r\n\t} else {\r\n\t\tobj[key] = value\r\n\t}\r\n}\r\n\r\n/**\r\n * @description 获取当前页面路径\r\n */\r\nfunction page() {\r\n\tconst pages = getCurrentPages();\r\n\tconst route = pages[pages.length - 1]?.route;\r\n\t// 某些特殊情况下(比如页面进行redirectTo时的一些时机)，pages可能为空数组\r\n\treturn `/${route ? route : ''}`\r\n}\r\n\r\n/**\r\n * @description 获取当前路由栈实例数组\r\n */\r\nfunction pages() {\r\n\tconst pages = getCurrentPages()\r\n\treturn pages\r\n}\r\n\r\n/**\r\n * 获取页面历史栈指定层实例\r\n * @param back {number} [0] - 0或者负数，表示获取历史栈的哪一层，0表示获取当前页面实例，-1 表示获取上一个页面实例。默认0。\r\n */\r\nfunction getHistoryPage(back = 0) {\r\n\tconst pages = getCurrentPages()\r\n\tconst len = pages.length\r\n\treturn pages[len - 1 + back]\r\n}\r\n\r\n\r\n\r\n/**\r\n * @description 修改uvui内置属性值\r\n * @param {object} props 修改内置props属性\r\n * @param {object} config 修改内置config属性\r\n * @param {object} color 修改内置color属性\r\n * @param {object} zIndex 修改内置zIndex属性\r\n */\r\nfunction setConfig({\r\n\tprops = {},\r\n\tconfig = {},\r\n\tcolor = {},\r\n\tzIndex = {}\r\n}) {\r\n\tconst {\r\n\t\tdeepMerge,\r\n\t} = uni.$uv\r\n\tuni.$uv.config = deepMerge(uni.$uv.config, config)\r\n\tuni.$uv.props = deepMerge(uni.$uv.props, props)\r\n\tuni.$uv.color = deepMerge(uni.$uv.color, color)\r\n\tuni.$uv.zIndex = deepMerge(uni.$uv.zIndex, zIndex)\r\n}\r\n\r\nexport {\r\n\trange,\r\n\tgetPx,\r\n\tsleep,\r\n\tos,\r\n\tsys,\r\n\trandom,\r\n\tguid,\r\n\t$parent,\r\n\taddStyle,\r\n\taddUnit,\r\n\tdeepClone,\r\n\tdeepMerge,\r\n\terror,\r\n\trandomArray,\r\n\ttimeFormat,\r\n\ttimeFrom,\r\n\ttrim,\r\n\tqueryParams,\r\n\ttoast,\r\n\ttype2icon,\r\n\tpriceFormat,\r\n\tgetDuration,\r\n\tpadZero,\r\n\tformValidate,\r\n\tgetProperty,\r\n\tsetProperty,\r\n\tpage,\r\n\tpages,\r\n\tgetHistoryPage,\r\n\tsetConfig\r\n}", "/**\r\n * 验证电子邮箱格式\r\n */\r\nfunction email(value) {\r\n    return /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证手机格式\r\n */\r\nfunction mobile(value) {\r\n    return /^1([3589]\\d|4[5-9]|6[1-2,4-7]|7[0-8])\\d{8}$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证URL格式\r\n */\r\nfunction url(value) {\r\n    return /^((https|http|ftp|rtsp|mms):\\/\\/)(([0-9a-zA-Z_!~*'().&=+$%-]+: )?[0-9a-zA-Z_!~*'().&=+$%-]+@)?(([0-9]{1,3}.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*'()-]+.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z].[a-zA-Z]{2,6})(:[0-9]{1,4})?((\\/?)|(\\/[0-9a-zA-Z_!~*'().;?:@&=+$,%#-]+)+\\/?)$/\r\n        .test(value)\r\n}\r\n\r\n/**\r\n * 验证日期格式\r\n */\r\nfunction date(value) {\r\n    if (!value) return false\r\n    // 判断是否数值或者字符串数值(意味着为时间戳)，转为数值，否则new Date无法识别字符串时间戳\r\n    if (number(value)) value = +value\r\n    return !/Invalid|NaN/.test(new Date(value).toString())\r\n}\r\n\r\n/**\r\n * 验证ISO类型的日期格式\r\n */\r\nfunction dateISO(value) {\r\n    return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证十进制数字\r\n */\r\nfunction number(value) {\r\n    return /^[\\+-]?(\\d+\\.?\\d*|\\.\\d+|\\d\\.\\d+e\\+\\d+)$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证字符串\r\n */\r\nfunction string(value) {\r\n    return typeof value === 'string'\r\n}\r\n\r\n/**\r\n * 验证整数\r\n */\r\nfunction digits(value) {\r\n    return /^\\d+$/.test(value)\r\n}\r\n\r\n/**\r\n * 验证身份证号码\r\n */\r\nfunction idCard(value) {\r\n    return /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/.test(\r\n        value\r\n    )\r\n}\r\n\r\n/**\r\n * 是否车牌号\r\n */\r\nfunction carNo(value) {\r\n    // 新能源车牌\r\n    const xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/\r\n    // 旧车牌\r\n    const creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/\r\n    if (value.length === 7) {\r\n        return creg.test(value)\r\n    } if (value.length === 8) {\r\n        return xreg.test(value)\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 金额,只允许2位小数\r\n */\r\nfunction amount(value) {\r\n    // 金额，只允许保留两位小数\r\n    return /^[1-9]\\d*(,\\d{3})*(\\.\\d{1,2})?$|^0\\.\\d{1,2}$/.test(value)\r\n}\r\n\r\n/**\r\n * 中文\r\n */\r\nfunction chinese(value) {\r\n    const reg = /^[\\u4e00-\\u9fa5]+$/gi\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 只能输入字母\r\n */\r\nfunction letter(value) {\r\n    return /^[a-zA-Z]*$/.test(value)\r\n}\r\n\r\n/**\r\n * 只能是字母或者数字\r\n */\r\nfunction enOrNum(value) {\r\n    // 英文或者数字\r\n    const reg = /^[0-9a-zA-Z]*$/g\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 验证是否包含某个值\r\n */\r\nfunction contains(value, param) {\r\n    return value.indexOf(param) >= 0\r\n}\r\n\r\n/**\r\n * 验证一个值范围[min, max]\r\n */\r\nfunction range(value, param) {\r\n    return value >= param[0] && value <= param[1]\r\n}\r\n\r\n/**\r\n * 验证一个长度范围[min, max]\r\n */\r\nfunction rangeLength(value, param) {\r\n    return value.length >= param[0] && value.length <= param[1]\r\n}\r\n\r\n/**\r\n * 是否固定电话\r\n */\r\nfunction landline(value) {\r\n    const reg = /^\\d{3,4}-\\d{7,8}(-\\d{3,4})?$/\r\n    return reg.test(value)\r\n}\r\n\r\n/**\r\n * 判断是否为空\r\n */\r\nfunction empty(value) {\r\n    switch (typeof value) {\r\n    case 'undefined':\r\n        return true\r\n    case 'string':\r\n        if (value.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '').length == 0) return true\r\n        break\r\n    case 'boolean':\r\n        if (!value) return true\r\n        break\r\n    case 'number':\r\n        if (value === 0 || isNaN(value)) return true\r\n        break\r\n    case 'object':\r\n        if (value === null || value.length === 0) return true\r\n        for (const i in value) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 是否json字符串\r\n */\r\nfunction jsonString(value) {\r\n    if (typeof value === 'string') {\r\n        try {\r\n            const obj = JSON.parse(value)\r\n            if (typeof obj === 'object' && obj) {\r\n                return true\r\n            }\r\n            return false\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\n/**\r\n * 是否数组\r\n */\r\nfunction array(value) {\r\n    if (typeof Array.isArray === 'function') {\r\n        return Array.isArray(value)\r\n    }\r\n    return Object.prototype.toString.call(value) === '[object Array]'\r\n}\r\n\r\n/**\r\n * 是否对象\r\n */\r\nfunction object(value) {\r\n    return Object.prototype.toString.call(value) === '[object Object]'\r\n}\r\n\r\n/**\r\n * 是否短信验证码\r\n */\r\nfunction code(value, len = 6) {\r\n    return new RegExp(`^\\\\d{${len}}$`).test(value)\r\n}\r\n\r\n/**\r\n * 是否函数方法\r\n * @param {Object} value\r\n */\r\nfunction func(value) {\r\n    return typeof value === 'function'\r\n}\r\n\r\n/**\r\n * 是否promise对象\r\n * @param {Object} value\r\n */\r\nfunction promise(value) {\r\n    return object(value) && func(value.then) && func(value.catch)\r\n}\r\n\r\n/** 是否图片格式\r\n * @param {Object} value\r\n */\r\nfunction image(value) {\r\n    const newValue = value.split('?')[0]\r\n    const IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i\r\n    return IMAGE_REGEXP.test(newValue)\r\n}\r\n\r\n/**\r\n * 是否视频格式\r\n * @param {Object} value\r\n */\r\nfunction video(value) {\r\n    const VIDEO_REGEXP = /\\.(mp4|mpg|mpeg|dat|asf|avi|rm|rmvb|mov|wmv|flv|mkv|m3u8)/i\r\n    return VIDEO_REGEXP.test(value)\r\n}\r\n\r\n/**\r\n * 是否为正则对象\r\n * @param {Object}\r\n * @return {Boolean}\r\n */\r\nfunction regExp(o) {\r\n    return o && Object.prototype.toString.call(o) === '[object RegExp]'\r\n}\r\n\r\nexport {\r\n    email,\r\n    mobile,\r\n    url,\r\n    date,\r\n    dateISO,\r\n    number,\r\n    digits,\r\n    idCard,\r\n    carNo,\r\n    amount,\r\n    chinese,\r\n    letter,\r\n    enOrNum,\r\n    contains,\r\n    range,\r\n    rangeLength,\r\n    empty,\r\n    jsonString,\r\n    landline,\r\n    object,\r\n    array,\r\n    code,\r\n    func,\r\n    promise,\r\n    video,\r\n    image,\r\n    regExp,\r\n    string\r\n}\r\n", "let _boundaryCheckingState = true; // 是否进行越界检查的全局开关\r\n\r\n/**\r\n * 把错误的数据转正\r\n * @private\r\n * @example strip(0.09999999999999998)=0.1\r\n */\r\nfunction strip(num, precision = 15) {\r\n  return +parseFloat(Number(num).toPrecision(precision));\r\n}\r\n\r\n/**\r\n * Return digits length of a number\r\n * @private\r\n * @param {*number} num Input number\r\n */\r\nfunction digitLength(num) {\r\n  // Get digit length of e\r\n  const eSplit = num.toString().split(/[eE]/);\r\n  const len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n  return len > 0 ? len : 0;\r\n}\r\n\r\n/**\r\n * 把小数转成整数,如果是小数则放大成整数\r\n * @private\r\n * @param {*number} num 输入数\r\n */\r\nfunction float2Fixed(num) {\r\n  if (num.toString().indexOf('e') === -1) {\r\n    return Number(num.toString().replace('.', ''));\r\n  }\r\n  const dLen = digitLength(num);\r\n  return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\r\n}\r\n\r\n/**\r\n * 检测数字是否越界，如果越界给出提示\r\n * @private\r\n * @param {*number} num 输入数\r\n */\r\nfunction checkBoundary(num) {\r\n  if (_boundaryCheckingState) {\r\n    if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n      console.warn(`${num} 超出了精度限制，结果可能不正确`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 把递归操作扁平迭代化\r\n * @param {number[]} arr 要操作的数字数组\r\n * @param {function} operation 迭代操作\r\n * @private\r\n */\r\nfunction iteratorOperation(arr, operation) {\r\n  const [num1, num2, ...others] = arr;\r\n  let res = operation(num1, num2);\r\n\r\n  others.forEach((num) => {\r\n    res = operation(res, num);\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\n/**\r\n * 高精度乘法\r\n * @export\r\n */\r\nexport function times(...nums) {\r\n  if (nums.length > 2) {\r\n    return iteratorOperation(nums, times);\r\n  }\r\n\r\n  const [num1, num2] = nums;\r\n  const num1Changed = float2Fixed(num1);\r\n  const num2Changed = float2Fixed(num2);\r\n  const baseNum = digitLength(num1) + digitLength(num2);\r\n  const leftValue = num1Changed * num2Changed;\r\n\r\n  checkBoundary(leftValue);\r\n\r\n  return leftValue / Math.pow(10, baseNum);\r\n}\r\n\r\n/**\r\n * 高精度加法\r\n * @export\r\n */\r\nexport function plus(...nums) {\r\n  if (nums.length > 2) {\r\n    return iteratorOperation(nums, plus);\r\n  }\r\n\r\n  const [num1, num2] = nums;\r\n  // 取最大的小数位\r\n  const baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n  // 把小数都转为整数然后再计算\r\n  return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n}\r\n\r\n/**\r\n * 高精度减法\r\n * @export\r\n */\r\nexport function minus(...nums) {\r\n  if (nums.length > 2) {\r\n    return iteratorOperation(nums, minus);\r\n  }\r\n\r\n  const [num1, num2] = nums;\r\n  const baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n  return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n}\r\n\r\n/**\r\n * 高精度除法\r\n * @export\r\n */\r\nexport function divide(...nums) {\r\n  if (nums.length > 2) {\r\n    return iteratorOperation(nums, divide);\r\n  }\r\n\r\n  const [num1, num2] = nums;\r\n  const num1Changed = float2Fixed(num1);\r\n  const num2Changed = float2Fixed(num2);\r\n  checkBoundary(num1Changed);\r\n  checkBoundary(num2Changed);\r\n  // 重要，这里必须用strip进行修正\r\n  return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\r\n}\r\n\r\n/**\r\n * 四舍五入\r\n * @export\r\n */\r\nexport function round(num, ratio) {\r\n  const base = Math.pow(10, ratio);\r\n  let result = divide(Math.round(Math.abs(times(num, base))), base);\r\n  if (num < 0 && result !== 0) {\r\n    result = times(result, -1);\r\n  }\r\n  // 位数不足则补0\r\n  return result;\r\n}\r\n\r\n/**\r\n * 是否进行边界检查，默认开启\r\n * @param flag 标记开关，true 为开启，false 为关闭，默认为 true\r\n * @export\r\n */\r\nexport function enableBoundaryChecking(flag = true) {\r\n  _boundaryCheckingState = flag;\r\n}\r\n\r\n\r\nexport default {\r\n  times,\r\n  plus,\r\n  minus,\r\n  divide,\r\n  round,\r\n  enableBoundaryChecking,\r\n};\r\n\r\n", "/**\r\n * 路由跳转方法，该方法相对于直接使用uni.xxx的好处是使用更加简单快捷\r\n * 并且带有路由拦截功能\r\n */\r\nimport { queryParams, deepMerge, page } from '../../libs/function/index.js'\r\nclass Router {\r\n\tconstructor() {\r\n\t\t// 原始属性定义\r\n\t\tthis.config = {\r\n\t\t\ttype: 'navigateTo',\r\n\t\t\turl: '',\r\n\t\t\tdelta: 1, // navigateBack页面后退时,回退的层数\r\n\t\t\tparams: {}, // 传递的参数\r\n\t\t\tanimationType: 'pop-in', // 窗口动画,只在APP有效\r\n\t\t\tanimationDuration: 300, // 窗口动画持续时间,单位毫秒,只在APP有效\r\n\t\t\tintercept: false ,// 是否需要拦截\r\n\t\t\tevents: {} // 页面间通信接口，用于监听被打开页面发送到当前页面的数据。hbuilderx 2.8.9+ 开始支持。\r\n\t\t}\r\n\t\t// 因为route方法是需要对外赋值给另外的对象使用，同时route内部有使用this，会导致route失去上下文\r\n\t\t// 这里在构造函数中进行this绑定\r\n\t\tthis.route = this.route.bind(this)\r\n\t}\r\n\r\n\t// 判断url前面是否有\"/\"，如果没有则加上，否则无法跳转\r\n\taddRootPath(url) {\r\n\t\treturn url[0] === '/' ? url : `/${url}`\r\n\t}\r\n\r\n\t// 整合路由参数\r\n\tmixinParam(url, params) {\r\n\t\turl = url && this.addRootPath(url)\r\n\r\n\t\t// 使用正则匹配，主要依据是判断是否有\"/\",\"?\",\"=\"等，如“/page/index/index?name=mary\"\r\n\t\t// 如果有url中有get参数，转换后无需带上\"?\"\r\n\t\tlet query = ''\r\n\t\tif (/.*\\/.*\\?.*=.*/.test(url)) {\r\n\t\t\t// object对象转为get类型的参数\r\n\t\t\tquery = queryParams(params, false)\r\n\t\t\t// 因为已有get参数,所以后面拼接的参数需要带上\"&\"隔开\r\n\t\t\treturn url += `&${query}`\r\n\t\t}\r\n\t\t// 直接拼接参数，因为此处url中没有后面的query参数，也就没有\"?/&\"之类的符号\r\n\t\tquery = queryParams(params)\r\n\t\treturn url += query\r\n\t}\r\n\r\n\t// 对外的方法名称\r\n\tasync route(options = {}, params = {}) {\r\n\t\t// 合并用户的配置和内部的默认配置\r\n\t\tlet mergeConfig = {}\r\n\r\n\t\tif (typeof options === 'string') {\r\n\t\t\t// 如果options为字符串，则为route(url, params)的形式\r\n\t\t\tmergeConfig.url = this.mixinParam(options, params)\r\n\t\t\tmergeConfig.type = 'navigateTo'\r\n\t\t} else {\r\n\t\t\tmergeConfig = deepMerge(this.config, options)\r\n\t\t\t// 否则正常使用mergeConfig中的url和params进行拼接\r\n\t\t\tmergeConfig.url = this.mixinParam(options.url, options.params)\r\n\t\t}\r\n\t\t// 如果本次跳转的路径和本页面路径一致，不执行跳转，防止用户快速点击跳转按钮，造成多次跳转同一个页面的问题\r\n\t\tif (mergeConfig.url === page()) return\r\n\r\n\t\tif (params.intercept) {\r\n\t\t\tmergeConfig.intercept = params.intercept\r\n\t\t}\r\n\t\t// params参数也带给拦截器\r\n\t\tmergeConfig.params = params\r\n\t\t// 合并内外部参数\r\n\t\tmergeConfig = deepMerge(this.config, mergeConfig)\r\n\t\t// 判断用户是否定义了拦截器\r\n\t\tif (typeof mergeConfig.intercept === 'function') {\r\n\t\t\t// 定一个promise，根据用户执行resolve(true)或者resolve(false)来决定是否进行路由跳转\r\n\t\t\tconst isNext = await new Promise((resolve, reject) => {\r\n\t\t\t\tmergeConfig.intercept(mergeConfig, resolve)\r\n\t\t\t})\r\n\t\t\t// 如果isNext为true，则执行路由跳转\r\n\t\t\tisNext && this.openPage(mergeConfig)\r\n\t\t} else {\r\n\t\t\tthis.openPage(mergeConfig)\r\n\t\t}\r\n\t}\r\n\r\n\t// 执行路由跳转\r\n\topenPage(config) {\r\n\t\t// 解构参数\r\n\t\tconst {\r\n\t\t\turl,\r\n\t\t\ttype,\r\n\t\t\tdelta,\r\n\t\t\tanimationType,\r\n\t\t\tanimationDuration,\r\n\t\t\tevents\r\n\t\t} = config\r\n\t\tif (config.type == 'navigateTo' || config.type == 'to') {\r\n\t\t\tuni.navigateTo({\r\n\t\t\t\turl,\r\n\t\t\t\tanimationType,\r\n\t\t\t\tanimationDuration,\r\n\t\t\t\tevents\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (config.type == 'redirectTo' || config.type == 'redirect') {\r\n\t\t\tuni.redirectTo({\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (config.type == 'switchTab' || config.type == 'tab') {\r\n\t\t\tuni.switchTab({\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (config.type == 'reLaunch' || config.type == 'launch') {\r\n\t\t\tuni.reLaunch({\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (config.type == 'navigateBack' || config.type == 'back') {\r\n\t\t\tuni.navigateBack({\r\n\t\t\t\tdelta\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default (new Router()).route", "let timeout = null\r\n\r\n/**\r\n * 防抖原理：一定时间内，只有最后一次操作，再过wait毫秒后才执行函数\r\n *\r\n * @param {Function} func 要执行的回调函数\r\n * @param {Number} wait 延时的时间\r\n * @param {Boolean} immediate 是否立即执行\r\n * @return null\r\n */\r\nfunction debounce(func, wait = 500, immediate = false) {\r\n    // 清除定时器\r\n    if (timeout !== null) clearTimeout(timeout)\r\n    // 立即执行，此类情况一般用不到\r\n    if (immediate) {\r\n        const callNow = !timeout\r\n        timeout = setTimeout(() => {\r\n            timeout = null\r\n        }, wait)\r\n        if (callNow) typeof func === 'function' && func()\r\n    } else {\r\n        // 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法\r\n        timeout = setTimeout(() => {\r\n            typeof func === 'function' && func()\r\n        }, wait)\r\n    }\r\n}\r\n\r\nexport default debounce\r\n", "let timer; let\r\n    flag\r\n/**\r\n * 节流原理：在一定时间内，只能触发一次\r\n *\r\n * @param {Function} func 要执行的回调函数\r\n * @param {Number} wait 延时的时间\r\n * @param {Boolean} immediate 是否立即执行\r\n * @return null\r\n */\r\nfunction throttle(func, wait = 500, immediate = true) {\r\n    if (immediate) {\r\n        if (!flag) {\r\n            flag = true\r\n            // 如果是立即执行，则在wait毫秒内开始时执行\r\n            typeof func === 'function' && func()\r\n            timer = setTimeout(() => {\r\n                flag = false\r\n            }, wait)\r\n        }\r\n    } else if (!flag) {\r\n        flag = true\r\n        // 如果是非立即执行，则在wait毫秒内的结束处执行\r\n        timer = setTimeout(() => {\r\n            flag = false\r\n            typeof func === 'function' && func()\r\n        }, wait)\r\n    }\r\n}\r\nexport default throttle\r\n", "import * as index from '../function/index.js';\r\nimport * as test from '../function/test.js';\r\nimport route from '../util/route.js';\r\nimport debounce from '../function/debounce.js';\r\nimport throttle from '../function/throttle.js';\r\nexport default {\r\n\t// 定义每个组件都可能需要用到的外部样式以及类名\r\n\tprops: {\r\n\t\t// 每个组件都有的父组件传递的样式，可以为字符串或者对象形式\r\n\t\tcustomStyle: {\r\n\t\t\ttype: [Object, String],\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\tcustomClass: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// 跳转的页面路径\r\n\t\turl: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// 页面跳转的类型\r\n\t\tlinkType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'navigateTo'\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {}\r\n\t},\r\n\tonLoad() {\r\n\t\t// getRect挂载到$uv上，因为这方法需要使用in(this)，所以无法把它独立成一个单独的文件导出\r\n\t\tthis.$uv.getRect = this.$uvGetRect\r\n\t},\r\n\tcreated() {\r\n\t\t// 组件当中，只有created声明周期，为了能在组件使用，故也在created中将方法挂载到$uv\r\n\t\tthis.$uv.getRect = this.$uvGetRect\r\n\t},\r\n\tcomputed: {\r\n\t\t$uv() {\r\n\t\t\treturn {\r\n\t\t\t\t...index,\r\n\t\t\t\ttest,\r\n\t\t\t\troute,\r\n\t\t\t\tdebounce,\r\n\t\t\t\tthrottle,\r\n\t\t\t\tunit: uni?.$uv?.config?.unit\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 生成bem规则类名\r\n\t\t * 由于微信小程序，H5，nvue之间绑定class的差异，无法通过:class=\"[bem()]\"的形式进行同用\r\n\t\t * 故采用如下折中做法，最后返回的是数组（一般平台）或字符串（支付宝和字节跳动平台），类似['a', 'b', 'c']或'a b c'的形式\r\n\t\t * @param {String} name 组件名称\r\n\t\t * @param {Array} fixed 一直会存在的类名\r\n\t\t * @param {Array} change 会根据变量值为true或者false而出现或者隐藏的类名\r\n\t\t * @returns {Array|string}\r\n\t\t */\r\n\t\tbem() {\r\n\t\t\treturn function(name, fixed, change) {\r\n\t\t\t\t// 类名前缀\r\n\t\t\t\tconst prefix = `uv-${name}--`\r\n\t\t\t\tconst classes = {}\r\n\t\t\t\tif (fixed) {\r\n\t\t\t\t\tfixed.map((item) => {\r\n\t\t\t\t\t\t// 这里的类名，会一直存在\r\n\t\t\t\t\t\tclasses[prefix + this[item]] = true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif (change) {\r\n\t\t\t\t\tchange.map((item) => {\r\n\t\t\t\t\t\t// 这里的类名，会根据this[item]的值为true或者false，而进行添加或者移除某一个类\r\n\t\t\t\t\t\tthis[item] ? (classes[prefix + item] = this[item]) : (delete classes[prefix + item])\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn Object.keys(classes)\r\n\t\t\t\t\t// 支付宝，头条小程序无法动态绑定一个数组类名，否则解析出来的结果会带有\",\"，而导致失效\r\n\r\n\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// 跳转某一个页面\r\n\t\topenPage(urlKey = 'url') {\r\n\t\t\tconst url = this[urlKey]\r\n\t\t\tif (url) {\r\n\t\t\t\t// 执行类似uni.navigateTo的方法\r\n\t\t\t\tuni[this.linkType]({\r\n\t\t\t\t\turl\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 查询节点信息\r\n\t\t// 目前此方法在支付宝小程序中无法获取组件跟接点的尺寸，为支付宝的bug(2020-07-21)\r\n\t\t// 解决办法为在组件根部再套一个没有任何作用的view元素\r\n\t\t$uvGetRect(selector, all) {\r\n\t\t\treturn new Promise((resolve) => {\r\n\t\t\t\tuni.createSelectorQuery()\r\n\t\t\t\t\t.in(this)[all ? 'selectAll' : 'select'](selector)\r\n\t\t\t\t\t.boundingClientRect((rect) => {\r\n\t\t\t\t\t\tif (all && Array.isArray(rect) && rect.length) {\r\n\t\t\t\t\t\t\tresolve(rect)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!all && rect) {\r\n\t\t\t\t\t\t\tresolve(rect)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.exec()\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetParentData(parentName = '') {\r\n\t\t\t// 避免在created中去定义parent变量\r\n\t\t\tif (!this.parent) this.parent = {}\r\n\t\t\t// 这里的本质原理是，通过获取父组件实例(也即类似uv-radio的父组件uv-radio-group的this)\r\n\t\t\t// 将父组件this中对应的参数，赋值给本组件(uv-radio的this)的parentData对象中对应的属性\r\n\t\t\t// 之所以需要这么做，是因为所有端中，头条小程序不支持通过this.parent.xxx去监听父组件参数的变化\r\n\t\t\t// 此处并不会自动更新子组件的数据，而是依赖父组件uv-radio-group去监听data的变化，手动调用更新子组件的方法去重新获取\r\n\t\t\tthis.parent = this.$uv.$parent.call(this, parentName)\r\n\t\t\tif (this.parent.children) {\r\n\t\t\t\t// 如果父组件的children不存在本组件的实例，才将本实例添加到父组件的children中\r\n\t\t\t\tthis.parent.children.indexOf(this) === -1 && this.parent.children.push(this)\r\n\t\t\t}\r\n\t\t\tif (this.parent && this.parentData) {\r\n\t\t\t\t// 历遍parentData中的属性，将parent中的同名属性赋值给parentData\r\n\t\t\t\tObject.keys(this.parentData).map((key) => {\r\n\t\t\t\t\tthis.parentData[key] = this.parent[key]\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 阻止事件冒泡\r\n\t\tpreventEvent(e) {\r\n\t\t\te && typeof(e.stopPropagation) === 'function' && e.stopPropagation()\r\n\t\t},\r\n\t\t// 空操作\r\n\t\tnoop(e) {\r\n\t\t\tthis.preventEvent(e)\r\n\t\t}\r\n\t},\r\n\tonReachBottom() {\r\n\t\tuni.$emit('uvOnReachBottom')\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\t// 判断当前页面是否存在parent和chldren，一般在checkbox和checkbox-group父子联动的场景会有此情况\r\n\t\t// 组件销毁时，移除子组件在父组件children数组中的实例，释放资源，避免数据混乱\r\n\t\tif (this.parent && test.array(this.parent.children)) {\r\n\t\t\t// 组件销毁时，移除父组件中的children数组中对应的实例\r\n\t\t\tconst childrenList = this.parent.children\r\n\t\t\tchildrenList.map((child, index) => {\r\n\t\t\t\t// 如果相等，则移除\r\n\t\t\t\tif (child === this) {\r\n\t\t\t\t\tchildrenList.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t// 兼容vue3\r\n\tunmounted() {\r\n\t\tif (this.parent && test.array(this.parent.children)) {\r\n\t\t\t// 组件销毁时，移除父组件中的children数组中对应的实例\r\n\t\t\tconst childrenList = this.parent.children\r\n\t\t\tchildrenList.map((child, index) => {\r\n\t\t\t\t// 如果相等，则移除\r\n\t\t\t\tif (child === this) {\r\n\t\t\t\t\tchildrenList.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}", "export default {\r\n\r\n\r\n\r\n\r\n\r\n\r\n}", "/**\r\n * 求两个颜色之间的渐变值\r\n * @param {string} startColor 开始的颜色\r\n * @param {string} endColor 结束的颜色\r\n * @param {number} step 颜色等分的份额\r\n * */\r\nfunction colorGradient(startColor = 'rgb(0, 0, 0)', endColor = 'rgb(255, 255, 255)', step = 10) {\r\n    const startRGB = hexToRgb(startColor, false) // 转换为rgb数组模式\r\n    const startR = startRGB[0]\r\n    const startG = startRGB[1]\r\n    const startB = startRGB[2]\r\n\r\n    const endRGB = hexToRgb(endColor, false)\r\n    const endR = endRGB[0]\r\n    const endG = endRGB[1]\r\n    const endB = endRGB[2]\r\n\r\n    const sR = (endR - startR) / step // 总差值\r\n    const sG = (endG - startG) / step\r\n    const sB = (endB - startB) / step\r\n    const colorArr = []\r\n    for (let i = 0; i < step; i++) {\r\n        // 计算每一步的hex值\r\n        let hex = rgbToHex(`rgb(${Math.round((sR * i + startR))},${Math.round((sG * i + startG))},${Math.round((sB\r\n\t\t\t* i + startB))})`)\r\n        // 确保第一个颜色值为startColor的值\r\n        if (i === 0) hex = rgbToHex(startColor)\r\n        // 确保最后一个颜色值为endColor的值\r\n        if (i === step - 1) hex = rgbToHex(endColor)\r\n        colorArr.push(hex)\r\n    }\r\n    return colorArr\r\n}\r\n\r\n// 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)\r\nfunction hexToRgb(sColor, str = true) {\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    sColor = String(sColor).toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = '#'\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n            }\r\n            sColor = sColorNew\r\n        }\r\n        // 处理六位的颜色值\r\n        const sColorChange = []\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`))\r\n        }\r\n        if (!str) {\r\n            return sColorChange\r\n        }\r\n        return `rgb(${sColorChange[0]},${sColorChange[1]},${sColorChange[2]})`\r\n    } if (/^(rgb|RGB)/.test(sColor)) {\r\n        const arr = sColor.replace(/(?:\\(|\\)|rgb|RGB)*/g, '').split(',')\r\n        return arr.map((val) => Number(val))\r\n    }\r\n    return sColor\r\n}\r\n\r\n// 将rgb表示方式转换为hex表示方式\r\nfunction rgbToHex(rgb) {\r\n    const _this = rgb\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    if (/^(rgb|RGB)/.test(_this)) {\r\n        const aColor = _this.replace(/(?:\\(|\\)|rgb|RGB)*/g, '').split(',')\r\n        let strHex = '#'\r\n        for (let i = 0; i < aColor.length; i++) {\r\n            let hex = Number(aColor[i]).toString(16)\r\n            hex = String(hex).length == 1 ? `${0}${hex}` : hex // 保证每个rgb的值为2位\r\n            if (hex === '0') {\r\n                hex += hex\r\n            }\r\n            strHex += hex\r\n        }\r\n        if (strHex.length !== 7) {\r\n            strHex = _this\r\n        }\r\n        return strHex\r\n    } if (reg.test(_this)) {\r\n        const aNum = _this.replace(/#/, '').split('')\r\n        if (aNum.length === 6) {\r\n            return _this\r\n        } if (aNum.length === 3) {\r\n            let numHex = '#'\r\n            for (let i = 0; i < aNum.length; i += 1) {\r\n                numHex += (aNum[i] + aNum[i])\r\n            }\r\n            return numHex\r\n        }\r\n    } else {\r\n        return _this\r\n    }\r\n}\r\n\r\n/**\r\n* JS颜色十六进制转换为rgb或rgba,返回的格式为 rgba（255，255，255，0.5）字符串\r\n* sHex为传入的十六进制的色值\r\n* alpha为rgba的透明度\r\n*/\r\nfunction colorToRgba(color, alpha) {\r\n    color = rgbToHex(color)\r\n    // 十六进制颜色值的正则表达式\r\n    const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    /* 16进制颜色转为RGB格式 */\r\n    let sColor = String(color).toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n        if (sColor.length === 4) {\r\n            let sColorNew = '#'\r\n            for (let i = 1; i < 4; i += 1) {\r\n                sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n            }\r\n            sColor = sColorNew\r\n        }\r\n        // 处理六位的颜色值\r\n        const sColorChange = []\r\n        for (let i = 1; i < 7; i += 2) {\r\n            sColorChange.push(parseInt(`0x${sColor.slice(i, i + 2)}`))\r\n        }\r\n        // return sColorChange.join(',')\r\n        return `rgba(${sColorChange.join(',')},${alpha})`\r\n    }\r\n\r\n    return sColor\r\n}\r\n\r\nexport {\r\n    colorGradient,\r\n    hexToRgb,\r\n    rgbToHex,\r\n    colorToRgba\r\n}\r\n", "// 此版本发布于2024-01-24\r\nconst version = '1.1.20';\r\n\r\n// 开发环境才提示，生产环境不会提示\r\nif (process.env.NODE_ENV === 'development') {\r\n\tconsole.log(`\\n %c uvui V${version} https://www.uvui.cn/ \\n\\n`, 'color: #ffffff; background: #3c9cff; padding:5px 0; border-radius: 5px;');\r\n}\r\n\r\nexport default {\r\n    v: version,\r\n    version,\r\n    // 主题名称\r\n    type: [\r\n        'primary',\r\n        'success',\r\n        'info',\r\n        'error',\r\n        'warning'\r\n    ],\r\n    // 颜色部分，本来可以通过scss的:export导出供js使用，但是奈何nvue不支持\r\n    color: {\r\n        'uv-primary': '#2979ff',\r\n        'uv-warning': '#ff9900',\r\n        'uv-success': '#19be6b',\r\n        'uv-error': '#fa3534',\r\n        'uv-info': '#909399',\r\n        'uv-main-color': '#303133',\r\n        'uv-content-color': '#606266',\r\n        'uv-tips-color': '#909399',\r\n        'uv-light-color': '#c0c4cc'\r\n    },\r\n\t// 默认单位，可以通过配置为rpx，那么在用于传入组件大小参数为数值时，就默认为rpx\r\n\tunit: 'px'\r\n}\r\n", "/**\r\n * 注意：\r\n * 此部分内容，在vue-cli模式下，需要在vue.config.js加入如下内容才有效：\r\n * module.exports = {\r\n *     transpileDependencies: ['uview-v2']\r\n * }\r\n */\r\n\r\nlet platform = 'none'\r\n\r\n\r\nplatform = 'vue3'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nplatform = 'h5'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default platform\r\n", "// 全局挂载引入http相关请求拦截插件\r\nimport Request from './libs/luch-request'\r\n\r\n// 引入全局mixin\r\nimport mixin from './libs/mixin/mixin.js'\r\n// 小程序特有的mixin\r\nimport mpMixin from './libs/mixin/mpMixin.js'\r\n\r\n\r\n\r\n\r\n// 路由封装\r\nimport route from './libs/util/route.js'\r\n// 公共工具函数\r\nimport * as index from './libs/function/index.js'\r\n// 防抖方法\r\nimport debounce from './libs/function/debounce.js'\r\n// 节流方法\r\nimport throttle from './libs/function/throttle.js'\r\n// 规则检验\r\nimport * as test from './libs/function/test.js'\r\n\r\n// 颜色渐变相关,colorGradient-颜色渐变,hexToRgb-十六进制颜色转rgb颜色,rgbToHex-rgb转十六进制\r\nimport * as colorGradient from './libs/function/colorGradient.js'\r\n\r\n// 配置信息\r\nimport config from './libs/config/config.js'\r\n// 平台\r\nimport platform from './libs/function/platform'\r\n\r\nconst $uv = {\r\n\troute,\r\n\tconfig,\r\n\ttest,\r\n\tdate: index.timeFormat, // 另名date\r\n\t...index,\r\n\tcolorGradient: colorGradient.colorGradient,\r\n\thexToRgb: colorGradient.hexToRgb,\r\n\trgbToHex: colorGradient.rgbToHex,\r\n\tcolorToRgba: colorGradient.colorToRgba,\r\n\thttp: new Request(),\r\n\tdebounce,\r\n\tthrottle,\r\n\tplatform,\r\n\tmixin,\r\n\tmpMixin\r\n}\r\nuni.$uv = $uv;\r\nconst install = (Vue,options={}) => {\r\n\r\n\t\tconst cloneMixin = index.deepClone(mixin);\r\n\t\tdelete cloneMixin?.props?.customClass;\r\n\t\tdelete cloneMixin?.props?.customStyle;\r\n\t\tVue.mixin(cloneMixin);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\tVue.config.globalProperties.$uv = $uv;\r\n\r\n}\r\nexport default {\r\n\tinstall\r\n}"],
  "mappings": "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",
  "names": ["url", "url", "validateStatus", "forEach", "mergeKeys", "clone", "parent", "depth", "promise", "url", "deepMerge", "range", "range", "string", "clone", "deepMerge", "array", "times", "date", "timer", "number", "key", "pages", "url", "deepMerge", "func", "func", "url"]
}
